{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,QAASC,SAASC,cAAc,yBAChCC,OAAQF,SAASC,cAAc,wBAC/BE,SAAUH,SAASC,cAAc,wBACjCG,OAAQJ,SAASC,cAAc,UAIjC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAIPT,EAAKM,OAAOW,iBAAiB,UAG7B,SAAsBC,GACpBA,EAAMC,iBAON,IALA,IAAQlB,EAA8BD,EAA9BC,QAASG,EAAqBJ,EAArBI,OAAQC,EAAaL,EAAbK,SACnBe,EAAQC,OAAOpB,EAAQqB,OACvBC,EAAOF,OAAOjB,EAAOkB,OACrBE,EAASH,OAAOhB,EAASiB,OAEtBG,EAAI,EAAGA,GAAKD,EAAQC,IAAK,CAEhClB,EAAckB,EADOL,EAAQK,EAAIF,GAE9BG,MAAK,SAAAC,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MACjBmB,EAAA9B,GAAS+B,OAAOC,QAAQ,uBAA4CC,OAAnBvB,EAAW,EAAE,QAAYuB,OAANtB,EAAM,M,IAE3EuB,OAAM,SAAAL,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MAClBmB,EAAA9B,GAAS+B,OAAOI,QAAQ,sBAAyCF,OAAnBvB,EAAW,EAAE,QAAYuB,OAANtB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from \"notiflix\";\n\nconst refs = {\n  delayEl: document.querySelector('input[name = \"delay\"]'),\n  stepEl: document.querySelector('input[name = \"step\"]'),\n  amountEl: document.querySelector('input[name=\"amount\"]'),\n  formEl: document.querySelector('.form')\n}\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay })\n      } else {\n        reject({ position, delay })\n      }\n    }, delay)\n  })\n}\n\nrefs.formEl.addEventListener('submit', onFormSubmit)\n\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  const { delayEl, stepEl, amountEl } = refs;\n  const delay = Number(delayEl.value);\n  const step = Number(stepEl.value);\n  const amount = Number(amountEl.value);\n\n  for (let i = 0; i <= amount; i++) {\n    const currentDelay = delay + i * step;\n    createPromise(i, currentDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position + 1} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position + 1} in ${delay}ms`);\n      });\n\n  }\n}"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$refs","delayEl","document","querySelector","stepEl","amountEl","formEl","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","delay1","Number","value","step","amount","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.28298a4a.js.map"}